### 使用技术栈：
python, django, celery

### 笔试题目：
1. 设计一个主机管理系统，用于管理企业内部的主机，包含主机、城市、机房等信息
city 城市
idc  机房 
host 主机


2. 提供对应模型的增删改查接口；提供一个 API，用于探测主机是否 ping 可达
import subprocess
import platform

def ping_host(ip):
    param = "-n" if platform.system().lower()== 'windows' else '-c'
    command = ['ping',param ,'1',ip]
    try:
        subprocess.check_output(command,stderr=subprocess.STDOUT,timeout=2)
        return True
    except:
        return False  

3. 每天 00:00 按城市和机房维度统计主机数量，并写入数据库
from django.db.models import Count
from .models import Host,DailyHostStat
from django.utils import timezone

def daily_stat():
    today = timezone.now().date()
    stats=Host.objects.values('idc_city_id','idc_id').annotate(count=Count('id'))
    for stat in stats:
        DailyHostStat.object.create(
        date=today,
        city_id=stat['idc__city_id'],
        idc_id=stat['idc_id'],
        host_count=stat['count'])

4. 实现一个中间件，统计每个请求的请求耗时
class RequestTimeMiddleware:
    def __init__(self,get_response):
        class.get_response=get_response
    def __call__(self,request):
        start_time=time.time()
        response=self.get_response(request)
        duration=time.time()-start_time
        print(f"Request{request.path}took(duration")
        return response

### 提交方式：
1. 使用 git 提交代码到 github 或者 gitee，提供对应代码仓库的地址。
